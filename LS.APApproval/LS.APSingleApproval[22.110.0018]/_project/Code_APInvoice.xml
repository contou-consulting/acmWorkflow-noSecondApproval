<Graph ClassName="APInvoice" Source="#CDATA" IsNew="True" FileType="NewFile">
    <CDATA name="Source"><![CDATA[using APQuickCheck = PX.Objects.AP.Standalone.APQuickCheck;
using CRLocation = PX.Objects.CR.Standalone.Location;
using IRegister = PX.Objects.CM.IRegister;
using PX.Data.BQL.Fluent;
using PX.Data.EP;
using PX.Data.ReferentialIntegrity.Attributes;
using PX.Data.WorkflowAPI;
using PX.Data;
using PX.Objects.AP;
using PX.Objects.CA;
using PX.Objects.CM.Extensions;
using PX.Objects.Common.Abstractions;
using PX.Objects.Common.MigrationMode;
using PX.Objects.Common;
using PX.Objects.CR;
using PX.Objects.CS;
using PX.Objects.GL.FinPeriods.TableDefinition;
using PX.Objects.GL;
using PX.Objects.PM;
using PX.Objects;
using PX.TM;
using System.Collections.Generic;
using System.Diagnostics;
using System;

namespace LS.APApproval
{
  // Acuminator disable once PX1016 ExtensionDoesNotDeclareIsActiveMethod extension should be constantly active
  public sealed class LSSLAPInvoiceApprovalExt : PXCacheExtension<PX.Objects.AP.APInvoice>
  {
    #region UsrCustomField
    [PXDBBool]
  [PXDefault(false, PersistingCheck = PXPersistingCheck.Nothing)]
    [PXUIField(DisplayName="Approved Previously")]
    public bool? UsrLSApprovedPreviously { get; set; }
    public abstract class usrLSApprovedPreviously: PX.Data.BQL.BqlBool.Field<usrLSApprovedPreviously> { }
    #endregion
      
    [PXDBBaseCury]
        [PXDefault(TypeCode.Decimal, "0.0", PersistingCheck = PXPersistingCheck.Nothing)]
    [PXUIField(DisplayName="Approved Amount")]
    public decimal? UsrLSApprovedAmt { get; set; }
    public abstract class usrLSApprovedAmt: PX.Data.BQL.BqlDecimal.Field<usrLSApprovedAmt> { }
  }
}]]></CDATA>
</Graph>